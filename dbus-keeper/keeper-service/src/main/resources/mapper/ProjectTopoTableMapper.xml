<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.creditease.dbus.domain.mapper.ProjectTopoTableMapper">
  <resultMap id="BaseResultMap" type="com.creditease.dbus.domain.model.ProjectTopoTable">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="project_id" jdbcType="INTEGER" property="projectId" />
    <result column="table_id" jdbcType="INTEGER" property="tableId" />
    <result column="topo_id" jdbcType="INTEGER" property="topoId" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="output_topic" jdbcType="VARCHAR" property="outputTopic" />
    <result column="output_type" jdbcType="VARCHAR" property="outputType" />
    <result column="sink_id" jdbcType="INTEGER" property="sinkId" />
    <result column="output_list_type" jdbcType="INTEGER" property="outputListType" />
    <result column="meta_ver" jdbcType="INTEGER" property="metaVer" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="schema_change_flag" jdbcType="TINYINT" property="schemaChangeFlag" />
    <result column="fullpull_col" jdbcType="VARCHAR" property="fullpullCol" />
    <result column="fullpull_split_shard_size" jdbcType="VARCHAR" property="fullpullSplitShardSize" />
    <result column="fullpull_split_style" jdbcType="VARCHAR" property="fullpullSplitStyle" />
    <result column="fullpull_condition" jdbcType="VARCHAR" property="fullpullCondition" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_project_topo_table
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.creditease.dbus.domain.model.ProjectTopoTable">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_project_topo_table (project_id, table_id, topo_id,
    status, output_topic, output_type,
    sink_id, output_list_type, meta_ver,
    update_time, schema_change_flag, fullpull_col,
    fullpull_split_shard_size, fullpull_split_style,
    fullpull_condition)
    values (#{projectId,jdbcType=INTEGER}, #{tableId,jdbcType=INTEGER}, #{topoId,jdbcType=INTEGER},
    #{status,jdbcType=VARCHAR}, #{outputTopic,jdbcType=VARCHAR}, #{outputType,jdbcType=VARCHAR},
    #{sinkId,jdbcType=INTEGER}, #{outputListType,jdbcType=INTEGER}, #{metaVer,jdbcType=INTEGER},
    #{updateTime,jdbcType=TIMESTAMP}, #{schemaChangeFlag,jdbcType=TINYINT}, #{fullpullCol,jdbcType=VARCHAR},
    #{fullpullSplitShardSize,jdbcType=VARCHAR}, #{fullpullSplitStyle,jdbcType=VARCHAR},
    #{fullpullCondition,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.creditease.dbus.domain.model.ProjectTopoTable">
    update t_project_topo_table
    <set>
      <if test="projectId != null">project_id = #{projectId,jdbcType=INTEGER},</if>
      <if test="tableId != null">table_id = #{tableId,jdbcType=INTEGER},</if>
      <if test="topoId != null">topo_id = #{topoId,jdbcType=INTEGER},</if>
      <if test="status != null">status = #{status,jdbcType=VARCHAR},</if>
      <if test="outputTopic != null">output_topic = #{outputTopic,jdbcType=VARCHAR},</if>
      <if test="updateTime != null">update_time = #{updateTime,jdbcType=TIMESTAMP},</if>
      <if test="outputType != null">output_type = #{outputType,jdbcType=VARCHAR},</if>
      <if test="outputListType != null">output_list_type = #{outputListType,jdbcType=INTEGER},</if>
      <if test="sinkId != null">sink_id = #{sinkId,jdbcType=INTEGER},</if>
      <if test="metaVer != null">meta_ver = #{metaVer,jdbcType=INTEGER},</if>
      <if test="schemaChangeFlag != null">schema_change_flag = #{fullpullCol,jdbcType=TINYINT},</if>
      <if test="fullpullCol != null">fullpull_col = #{schemaChangeFlag,jdbcType=TINYINT},</if>
      <if test="fullpullSplitShardSize != null">fullpull_split_shard_size = #{fullpullSplitShardSize,jdbcType=TINYINT},</if>
      <if test="fullpullSplitStyle != null">fullpull_split_style = #{fullpullSplitStyle,jdbcType=TINYINT},</if>
      <if test="fullpullCondition != null">fullpull_condition = #{fullpullCondition,jdbcType=TINYINT},</if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
     select id, project_id, table_id, topo_id, status, output_topic, output_type, sink_id,
    output_list_type, meta_ver, update_time, schema_change_flag, fullpull_col, fullpull_split_shard_size,
    fullpull_split_style, fullpull_condition
    from t_project_topo_table
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, project_id, table_id, topo_id, status, output_topic, output_type, sink_id,
    output_list_type, meta_ver, update_time, schema_change_flag, fullpull_col, fullpull_split_shard_size,
    fullpull_split_style, fullpull_condition
    from t_project_topo_table
  </select>

  <select id="getProjectNames" resultType="java.util.Map">
    SELECT DISTINCT
      project.id projectId,
      project.project_name projectName,
      project.project_display_name projectDisplayName
    FROM
     t_project project
  </select>
  <select id="getTopologyNames" parameterType="java.lang.Integer" resultType="java.util.Map">
    SELECT DISTINCT
    topology.id topoId,
    topology.topo_name topoName
    FROM
    t_project_topo topology
    <where>
      <if test="projectId != null">topology.project_id= #{projectId,jdbcType=INTEGER}</if>
    </where>
  </select>
  <select id="getDSNames" resultType="java.util.Map">
    SELECT DISTINCT
    dsource.id dsId,
    dsource.ds_name dsName
  FROM
    t_project_topo_table topotable,
    t_data_tables dtable,
    t_dbus_datasource dsource
  WHERE
     topotable.table_id=dtable.id AND
     dsource.id = dtable.ds_id
    <if test="projectId != null">AND topotable.project_id= #{projectId,jdbcType=INTEGER}</if>
  </select>
  <select id="searchTable" parameterType="java.util.Map" resultType="java.util.Map">
    SELECT
      topotable.id tableId,
      project.id projectId,
      project.project_name projectName,
      project.project_display_name projectDisplayName,
      topotable.topo_id topoId,
      dtable.id sourcetableId,
      dsource.ds_type dsType,
      dsource.ds_name dsName,
      dtable.schema_name schemaName,
      dtable.table_name tableName,
      dtable.table_name_alias tableNameAlias,
      dtable.physical_table_regex physicalTableRegex,
      metaversion.version version,
      topology.topo_name topoName,
      topology.status topoStatus,
      dtable.output_topic inputTopic,
      topotable.output_topic outputTopic,
      topotable.status,
      topotable.output_type outputType,
      topotable.schema_change_flag schemaChangeFlag,
      dtable.description,
      resource.fullpull_enable_flag ifFullpull
    FROM
      t_dbus_datasource dsource,
      t_data_tables dtable,
      t_project project,
      t_project_topo_table topotable,
      t_project_topo topology,
      t_project_resource resource,
      t_meta_version metaversion
    WHERE
      resource.project_id = topotable.project_id
      AND resource.table_id = topotable.table_id
      AND dtable.id = topotable.table_id
      AND topotable.project_id = project.id
      AND dtable.ds_id = dsource.id
      AND topology.id = topotable.topo_id
      AND dtable.ver_id = metaversion.id
      <if test="dsName != null">AND dsource.ds_name = #{dsName}</if>
      <if test="schemaName != null">AND dtable.schema_name like "%"#{schemaName}"%"</if>
      <if test="tableName != null">AND dtable.table_name like "%"#{tableName}"%"</if>
      <if test="projectId != null">AND topotable.project_id=#{projectId}</if>
      <if test="topoId != null">AND topotable.topo_id=#{topoId}</if>
  </select>
  <select id="getUseEncodeTables" parameterType="java.util.List" resultType="java.lang.Long">
    SELECT    pt.table_id tableId    FROM
    t_project_topo_table pt
    JOIN t_project_topo_table_encode_output_columns pc ON pt.id = pc.project_topo_table_id
    WHERE    pc.special_approve = 0
    AND pt.table_id IN
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
    UNION
    SELECT    c.table_id tableId    FROM
    t_encode_columns c
    WHERE    c.table_id IN
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </select>
  <select id="selectByTableId" parameterType="java.lang.Integer" resultType="java.util.Map">
    SELECT
      topotable.id tableId,
      topotable.topo_id topoId,
      dsource.ds_type dsType,
      dsource.ds_name dsName,
      dschema.schema_name schemaName,
      dtable.table_name tableName,
      dtable.description,
      dtable.id sourceTableId,
      resource.fullpull_enable_flag ifFullpull,
      topotable.sink_id sinkId,
      topotable.output_type outputType,
      topotable.output_topic outputTopic,
      topotable.output_list_type outputListType,
      topotable.project_id projectId,
      topotable.meta_ver version

    FROM
      t_dbus_datasource dsource,
      t_data_schema dschema,
      t_data_tables dtable,
      t_project_topo_table topotable,
      t_project_resource resource
    WHERE
      dtable.id=topotable.table_id AND
      dtable.ds_id = dsource.id AND
      dtable.schema_id = dschema.id AND
      topotable.id = #{projectTableId} AND
      resource.table_id = topotable.table_id AND
      resource.project_id = topotable.project_id
  </select>
  <select id="selectNameByTopic" parameterType="java.util.Map" resultType="java.lang.String">
    SELECT DISTINCT
      dt.table_name tableName
    FROM
      t_data_tables dt,
      t_project_topo_table topotable
    <where>
      dt.id = topotable.table_id AND
      dt.output_topic = #{topic, jdbcType=VARCHAR}
      <if test="tableId != null "> AND topotable.id != #{tableId}</if>
    </where>
  </select>
  <select id="getProjectTopologies" parameterType="java.lang.Integer" resultType="java.util.Map">
    SELECT DISTINCT
      id topoId,topo_name topoName
    FROM
      t_project_topo
    WHERE
      project_id = #{projectId,jdbcType = INTEGER}

  </select>
  <select id="getExistedTopicsByProjectId" parameterType="java.lang.Long" resultType="java.util.Map">
    SELECT DISTINCT
    sink_id,output_topic
    FROM
    t_project_topo_table
    WHERE
    project_id = #{projectId,jdbcType = BIGINT}
  </select>
  <select id="selectByPIdTopoIdTableId" resultMap="BaseResultMap">
    SELECT * FROM t_project_topo_table
    WHERE
      project_id = #{projectId,jdbcType = INTEGER}
      AND topo_id = #{topoId,jdbcType = INTEGER}
      AND table_id = #{tableId,jdbcType = INTEGER}
  </select>
  <select id="countByDsId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select count(1) from t_project_topo_table tt,t_data_tables t
    where tt.table_id = t.id and t.ds_id = #{dsId}
  </select>
  <select id="countBySchemaId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select count(1) from t_project_topo_table tt,t_data_tables t
    where tt.table_id = t.id and t.schema_id = #{schemaId}
  </select>
  <select id="countByTableId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select count(1) from t_project_topo_table where table_id = #{tableId}
  </select>
  <delete id="deleteByProjectId" parameterType="java.lang.Integer">
    delete from t_project_topo_table where project_id = #{projectId}
  </delete>
  <select id="selectBySourceTableId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT *
    FROM
    t_project_topo_table
    WHERE
    table_id = #{tableId}
  </select>
  <select id="selectRunningByProjectId"  resultMap="BaseResultMap">
    select * from t_project_topo_table t
    where t.project_id = #{projectId} and t.status <![CDATA[!= ]]> 'stopped'
  </select>
  <select id="getTopoTablesByUserId"  resultMap="BaseResultMap">
    select t.* from t_project_user u,t_project_topo_table t
    where u.project_id = t.project_id and u.user_id = #{userId};
  </select>
  <select id="underOtherTopologyTableCountInSameProject" resultType="java.lang.Integer">
    select
      count(1) cnt
    from
      t_project_topo_table t
    where
      t.project_id = #{projectId,jdbcType=INTEGER} AND
      t.table_id = #{tableId,jdbcType=INTEGER} AND
      t.topo_id <![CDATA[!= ]]> #{topoId,jdbcType=INTEGER}
  </select>
  <select id="searchProjectTable" parameterType="java.util.Map" resultType="java.util.Map">
    SELECT
	  topotable.id tableId,
      project.id projectId,
      project.project_name projectName,
      project.project_display_name projectDisplayName,
      topotable.topo_id topoId,
      dtable.id sourcetableId,
      dsource.ds_type dsType,
      dsource.ds_name dsName,
      dtable.schema_name schemaName,
      dtable.table_name tableName,
      dtable.table_name_alias tableNameAlias,
      dtable.physical_table_regex physicalTableRegex,
      metaversion.version version,
      topology.topo_name topoName,
      topology.status topoStatus,
      dtable.output_topic inputTopic,
      topotable.output_topic outputTopic,
      topotable.status,
      topotable.output_type outputType,
      topotable.schema_change_flag schemaChangeFlag,
      dtable.description,
      resource.fullpull_enable_flag ifFullpull,
      project.principal
    FROM
        t_dbus_datasource dsource,
        t_data_tables dtable,
        t_project project,
        t_project_topo_table topotable,
        t_project_topo topology,
        t_project_resource resource,
        t_meta_version metaversion
    WHERE
        resource.project_id = topotable.project_id
    AND resource.table_id = topotable.table_id
    AND dtable.id = topotable.table_id
    AND topotable.project_id = project.id
    AND dtable.ds_id = dsource.id
    AND topology.id = topotable.topo_id
    AND dtable.ver_id = metaversion.id
    <if test="dsName != null">AND dsource.ds_name = #{dsName}</if>
    <if test="schemaName != null">AND dtable.schema_name like "%"#{schemaName}"%"</if>
    <if test="tableName != null">AND dtable.table_name like "%"#{tableName}"%"</if>
    <if test="projectId != null">AND topotable.project_id=#{projectId}</if>
    <if test="topoId != null">AND topotable.topo_id=#{topoId}</if>
  </select>
  <select id="getNamesByTopoTableId" parameterType="java.lang.Integer"  resultType="java.util.Map">
    SELECT
        d.ds_name,
        t.schema_name,
        t.table_name,
        p.project_name,
        pt.topo_name
    FROM
        t_project_topo_table tt,
        t_project p,
        t_project_topo pt,
        t_data_tables t,
        t_dbus_datasource d
    WHERE
        tt.project_id = p.id
    AND tt.topo_id = pt.id
    AND tt.table_id = t.id
    AND t.ds_id = d.id
    AND tt.id = #{topoTableId}
  </select>
  <select id="getTopoTablesByIds" parameterType="java.util.List" resultType="java.util.Map">
    SELECT pt.*,p.project_name,pp.topo_name,tt.table_name,tt.schema_name,ts.ds_name,pp.status topo_status
    FROM
      t_project_topo_table pt ,
      t_project p,t_project_topo pp,
      t_data_tables tt,
     t_dbus_datasource ts
    WHERE
      pt.project_id=p.id
      AND pt.topo_id=pp.id
      AND pt.table_id=tt.id
      AND tt.ds_id=ts.id
      AND pt.id IN
      <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
        #{item}
      </foreach>
  </select>
  <update id="updateStatusByTopoTableIds">
    UPDATE t_project_topo_table
    SET STATUS = #{status}
    WHERE id IN
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </update>
  <select id="searchTableByTopoTableIds" parameterType="java.util.List" resultType="java.util.Map">
    SELECT
      ptt.id topoTableId,
      ptt.project_id projectId,
      p.project_name projectName,
      p.principal,
      ptt.sink_id sinkId,
      ptt.fullpull_col fullpullCol,
      ptt.fullpull_split_shard_size fullpullSplitShardSize,
      ptt.fullpull_split_style fullpullSplitStyle,
      ptt.fullpull_condition fullpullCondition,
      dt.ds_id dsId,
      dd.ds_type dsType,
      dd.ds_name dsName,
      dd.ctrl_topic ctrlTopic,
      dd.master_url masterUrl,
      dd.slave_url slaveUrl,
      dd.dbus_user dbusUser,
      dd.dbus_pwd dbusPwd,
      dt.schema_name schemaName,
      dt.id tableId,
      dt.table_name tableName,
      dt.physical_table_regex physicalTableRegex,
      dt.output_topic outputTopic
    FROM
      t_project_topo_table ptt,
      t_project p,
      t_project_topo pt,
      t_data_tables dt,
      t_dbus_datasource dd
    WHERE
      ptt.project_id = p.id
      AND ptt.topo_id = pt.id
      AND ptt.table_id = dt.id
      AND dt.ds_id = dd.id
      AND ptt.id IN
      <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
        #{item}
      </foreach>
  </select>
  <update id="updateTopoIdByTopoTableIds">
    UPDATE t_project_topo_table
      SET topo_id = #{topoId}
    WHERE
      id IN
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </update>
</mapper>